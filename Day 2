/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
  vector<int> l1Data;
        vector<int> l2Data;
        vector<int> l3;
        
       ListNode *head = new ListNode(0);
       ListNode *curr = head;
       /* while(l1->next != nullptr && l2->next != nullptr)
        {
            l1Data.push_back(l1->val);
            l2Data.push_back(l2->val);
            
        }*/
        int carry = 0; 
        int sz = l1Data.size();
        while(l1 || l2)
        {  
            int x = l1->val;            
            int y =  l2->val;            
            int sum = (x + y) + carry;
              
            l3.push_back(sum%10);
            curr->next = new ListNode(sum%10);
            curr = curr->next;
             carry = (sum)/10; 
            l1 = l1->next;
            l2 = l2->next;
        } 
        
        return head->next;
    }
    
};
